{
  "version": 3,
  "sources": [
    "../../../node_modules/simplifyify/node_modules/browserify/node_modules/browser-pack/_prelude.js",
    "../../../source/_assets/js/index.js"
  ],
  "names": [],
  "mappings
  "file": "generated.js",
  "sourceRoot": "",
  "sourcesContent": [
    "(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})",
    "console.log('yes hello I am a javascript')\nfunction click () {\n  return 'click';\n}\n\n// add a callback function to an event on a DOM node\nfunction addEvent (domNode, e, fn) {\n  if (domNode.addEventListener) {\n    return domNode.addEventListener(e, fn, false);\n  } else if (domNode.attachEvent) {\n    return domNode.attachEvent('on' + e, fn);\n  }\n}\n\n// remove a specific function binding from a DOM node event\nfunction removeEvent (domNode, e, fn) {\n  if (domNode.removeEventListener) {\n    return domNode.removeEventListener(e, fn, false);\n  } else if (domNode.detachEvent) {\n    return domNode.detachEvent('on' + e,  fn);\n  }\n}\n\n// get the target element of an event\nfunction eventTarget (e) {\n  return e.target || e.srcElement;\n}\n\n// prevent default behavior of an event\nfunction preventDefault (e) {\n  if (e.preventDefault) {\n    return e.preventDefault()\n  } else if (e.returnValue) {\n    e.returnValue = false\n  }\n}\n\n// turn a domNodeList into an array\nfunction nodeListToArray (domNodeList) {\n  return Array.prototype.slice.call(domNodeList);\n}\n\n// ┌────────────────────┐\n// │ Class Manipulation │\n// └────────────────────┘\n\n// check if an element has a specific class\nfunction hasClass (domNode, className) {\n  var elementClass = ' ' + domNode.className + ' '\n  return elementClass.indexOf(' ' + className + ' ') !== -1\n}\n\n// add one or more classes to an element\nfunction addClass (domNode, classes) {\n  classes.split(' ').forEach(function (c) {\n    if (!hasClass(domNode, c)) {\n      domNode.className += ' ' + c\n    }\n  })\n}\n\n// remove one or more classes from an element\nfunction removeClass (domNode, classes) {\n  var elementClass = ' ' + domNode.className + ' '\n  classes.split(' ').forEach(function (c) {\n    elementClass = elementClass.replace(' ' + c + ' ', ' ')\n  })\n  domNode.className = elementClass.trim()\n}\n\n// if domNode has the class, remove it, else add it\nfunction toggleClass (domNode, className) {\n  if (hasClass(domNode, className)) {\n    removeClass(domNode, className)\n  } else {\n    addClass(domNode, className)\n  }\n}\n\nfunction findElements (query, domNode) {\n  var context = domNode || document;\n  var elements = context.querySelectorAll(query);\n  return nodeListToArray(elements);\n}\n\n// remove 'is-active' class from every element in an array\nfunction removeActive (array) {\n  if (typeof array == 'object') {\n    array = nodeListToArray(array);\n  }\n  array.forEach(function (item) {\n    removeClass(item, 'is-active');\n  });\n}\n\n// remove 'is-active' from array, add to element\nfunction toggleActive (array, el) {\n  var isActive = hasClass(el, 'is-active')\n  if (isActive) {\n    removeClass(el, 'is-active')\n  } else {\n    removeActive(array)\n    addClass(el, 'is-active')\n  }\n}\n\n// ┌────────────┐\n// │ Navigation │\n// └────────────┘\nfunction expandingNav (domNode) {\n  var toggles = findElements('.js-expanding-toggle', domNode)\n  var sections = document.querySelectorAll('.js-expanding')\n\n  toggles.forEach(function (toggle) {\n    addEvent(toggle, click(), function (e) {\n      preventDefault(e)\n\n      var sectionId = toggle.getAttribute('data-expanding')\n      var section = document.querySelector('.js-expanding[data-expanding=\"' + sectionId + '\"]')\n      var isOpen = hasClass(section, 'is-active')\n      var shouldClose = hasClass(section, 'is-active')\n\n      toggleActive(sections, section)\n\n      if (isOpen && shouldClose) {\n        removeClass(section, 'is-active')\n      } else {\n        addClass(section, 'is-active')\n      }\n    })\n  })\n}\n\nexpandingNav()"
  ]
}